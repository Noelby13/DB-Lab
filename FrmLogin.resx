<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>